# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from server.models.base_model_ import Model
from server import util


class Error(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, description=None, subject=None, match=None, page=None, line=None):  # noqa: E501
        """Error - a model defined in OpenAPI

        :param id: The id of this Error.  # noqa: E501
        :type id: int
        :param description: The description of this Error.  # noqa: E501
        :type description: str
        :param subject: The subject of this Error.  # noqa: E501
        :type subject: str
        :param match: The match of this Error.  # noqa: E501
        :type match: int
        :param page: The page of this Error.  # noqa: E501
        :type page: int
        :param line: The line of this Error.  # noqa: E501
        :type line: int
        """
        self.openapi_types = {
            'id': int,
            'description': str,
            'subject': str,
            'match': int,
            'page': int,
            'line': int
        }

        self.attribute_map = {
            'id': 'id',
            'description': 'description',
            'subject': 'subject',
            'match': 'match',
            'page': 'page',
            'line': 'line'
        }

        self._id = id
        self._description = description
        self._subject = subject
        self._match = match
        self._page = page
        self._line = line

    @classmethod
    def from_dict(cls, dikt) -> 'Error':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Error of this Error.  # noqa: E501
        :rtype: Error
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this Error.

        ID ошибки.  # noqa: E501

        :return: The id of this Error.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Error.

        ID ошибки.  # noqa: E501

        :param id: The id of this Error.
        :type id: int
        """

        self._id = id

    @property
    def description(self):
        """Gets the description of this Error.

        Описание ошибки.  # noqa: E501

        :return: The description of this Error.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this Error.

        Описание ошибки.  # noqa: E501

        :param description: The description of this Error.
        :type description: str
        """

        self._description = description

    @property
    def subject(self):
        """Gets the subject of this Error.

        Тема ошибки.  # noqa: E501

        :return: The subject of this Error.
        :rtype: str
        """
        return self._subject

    @subject.setter
    def subject(self, subject):
        """Sets the subject of this Error.

        Тема ошибки.  # noqa: E501

        :param subject: The subject of this Error.
        :type subject: str
        """

        self._subject = subject

    @property
    def match(self):
        """Gets the match of this Error.

        Совпадение ошибки.  # noqa: E501

        :return: The match of this Error.
        :rtype: int
        """
        return self._match

    @match.setter
    def match(self, match):
        """Sets the match of this Error.

        Совпадение ошибки.  # noqa: E501

        :param match: The match of this Error.
        :type match: int
        """

        self._match = match

    @property
    def page(self):
        """Gets the page of this Error.

        Номер страницы ошибки в файле.  # noqa: E501

        :return: The page of this Error.
        :rtype: int
        """
        return self._page

    @page.setter
    def page(self, page):
        """Sets the page of this Error.

        Номер страницы ошибки в файле.  # noqa: E501

        :param page: The page of this Error.
        :type page: int
        """

        self._page = page

    @property
    def line(self):
        """Gets the line of this Error.

        Номер строки ошибки в файле.  # noqa: E501

        :return: The line of this Error.
        :rtype: int
        """
        return self._line

    @line.setter
    def line(self, line):
        """Sets the line of this Error.

        Номер строки ошибки в файле.  # noqa: E501

        :param line: The line of this Error.
        :type line: int
        """

        self._line = line
